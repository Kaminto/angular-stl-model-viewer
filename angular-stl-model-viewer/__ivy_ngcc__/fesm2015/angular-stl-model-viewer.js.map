{"version":3,"file":"angular-stl-model-viewer.js","sources":["ng:/angular-stl-model-viewer/lib/angular-stl-model-viewer.component.ts","ng:/angular-stl-model-viewer/lib/angular-stl-model-viewer.module.ts","ng:/angular-stl-model-viewer/public-api.ts","ng:/angular-stl-model-viewer/angular-stl-model-viewer.ts"],"names":["THREE.Vector3","THREE.PerspectiveCamera","THREE.PointLight","THREE.MeshPhongMaterial","THREE.Scene","THREE.WebGLRenderer","THREE.Object3D","THREE.Color","THREE.Mesh"],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core'\n\nimport * as THREE from 'three'\n\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nimport { Vector3 } from 'three'\n\nexport interface MeshOptions {\n  castShadow?: boolean\n  position?: THREE.Vector3\n  receiveShadow?: boolean\n  scale?: THREE.Vector3\n  up?: THREE.Vector3\n  userData?: {[key: string]: any}\n  visible?: boolean\n}\n\nconst defaultMeshOptions = {\n  castShadow: true,\n  position: new THREE.Vector3(0, 0, 0),\n  receiveShadow: true,\n  scale: new THREE.Vector3(0.03, 0.03, 0.03)\n}\n\nfunction isWebGLAvailable() {\n  try {\n    const canvas = document.createElement('canvas')\n    return !! (window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext( 'experimental-webgl')))\n  } catch (e) {\n    return false\n  }\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'stl-model-viewer',\n  styles: [`\n:host {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n  `],\n  template: ''\n})\nexport class StlModelViewerComponent implements OnInit, OnDestroy {\n  @Input() stlModels: string[] = []\n  @Input() hasControls = true\n  @Input() camera: THREE.PerspectiveCamera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 1, 15)\n  @Input() cameraTarget: THREE.Vector3 = new THREE.Vector3( 0, 0, 0 )\n  @Input() light: THREE.Light = new THREE.PointLight( 0xffffff )\n  @Input() material: THREE.Material = new THREE.MeshPhongMaterial({ color: 0xc4c4c4, shininess: 100, specular: 0x111111 })\n  @Input() scene: THREE.Scene = new THREE.Scene()\n  @Input() renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer({ antialias: true })\n  @Input() controls: any | null = null\n  @Input() meshOptions: MeshOptions[] = []\n\n  @Output() rendered = new EventEmitter<void>()\n\n  hasWebGL = isWebGLAvailable()\n  meshGroup = new THREE.Object3D()\n  isRendered = false\n  showStlModel = true\n  stlLoader = new STLLoader()\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private eleRef: ElementRef,\n    private ngZone: NgZone\n  ) {\n    this.cdr.detach()\n    // default light position\n    this.light.position.set(1, 1, 2)\n\n    // default camera position\n    this.camera.position.set(3, 3, 3)\n\n    // default scene background\n    this.scene.background = new THREE.Color(0xffffff)\n\n    // default renderer options\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n    this.renderer.shadowMap.enabled = true\n  }\n\n  ngOnInit() {\n    if (!this.hasWebGL) {\n      console.error('stl-model-viewer: Seems like your system does not support webgl.')\n      return\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.init()\n    })\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.meshGroup.remove()\n\n    if (this.renderer) {\n      this.renderer.renderLists.dispose()\n      this.renderer.dispose()\n    }\n\n    if (this.camera) {\n      this.camera.remove()\n    }\n\n    if (this.light) {\n      this.light.remove()\n    }\n\n    if (this.material) {\n      this.material.dispose()\n    }\n\n    if (this.controls) {\n      this.controls.removeEventListener('change', this.render)\n      this.controls.dispose()\n    }\n\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        this.scene.remove(child)\n      })\n      this.scene.dispose()\n    }\n  }\n\n  private async init() {\n    this.camera.add(this.light)\n    this.scene.add(this.camera)\n\n    // use default controls\n    if (this.hasControls && !this.controls) {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement)\n      this.controls.enableZoom = true\n      this.controls.minDistance = 1\n      this.controls.maxDistance = 7\n\n      this.controls.addEventListener('change', this.render)\n    }\n\n    window.addEventListener('resize', this.onWindowResize, false)\n\n    const meshCreations = this.stlModels.map((modelPath, index) => this.createMesh(modelPath, this.meshOptions[index]))\n    const meshes: THREE.Object3D[] = await Promise.all(meshCreations)\n\n    meshes.map((mesh) => this.meshGroup.add(mesh))\n    this.scene.add(this.meshGroup)\n    this.eleRef.nativeElement.appendChild(this.renderer.domElement)\n    this.setSizes()\n    this.render()\n    this.ngZone.run(() => {\n      this.isRendered = true\n      this.rendered.emit()\n      this.cdr.detectChanges()\n    })\n  }\n\n  async createMesh(path: string, meshOptions: MeshOptions = {}): Promise<THREE.Mesh> {\n    const geometry: THREE.BufferGeometry = await this.stlLoader.loadAsync(path)\n    const mesh = new THREE.Mesh(geometry, this.material)\n\n    const vectorOptions = ['position', 'scale', 'up']\n    const options = Object.assign({}, defaultMeshOptions, meshOptions)\n\n    Object.getOwnPropertyNames(options).forEach((option) => {\n      if (vectorOptions.indexOf(option) > -1) {\n        const vector = options[option] as Vector3\n        const meshVectorOption = mesh[option] as Vector3\n        meshVectorOption.set(vector.x, vector.y, vector.z)\n      } else {\n        mesh[option] = options[option]\n      }\n    })\n\n    return mesh\n  }\n\n  render = () => {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  setSizes() {\n    const width = this.eleRef.nativeElement.offsetWidth\n    const height = this.eleRef.nativeElement.offsetHeight\n\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n\n    this.renderer.setSize(width, height)\n  }\n\n  onWindowResize = () => {\n    this.setSizes()\n    this.render()\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { StlModelViewerComponent } from './angular-stl-model-viewer.component'\n\n@NgModule({\n  declarations: [StlModelViewerComponent],\n  exports: [StlModelViewerComponent],\n  imports: [\n  ]\n})\nexport class StlModelViewerModule { }\n","/*\n * Public API Surface of angular-stl-model-viewer\n */\n\nexport * from './lib/angular-stl-model-viewer.component'\nexport * from './lib/angular-stl-model-viewer.module'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}